
server {
    listen 80;
    server_name {{server_name}};
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name {{server_name}};

    ssl_certificate /etc/letsencrypt/live/{{server_name}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{server_name}}/privkey.pem;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_dhparam /home/{{user}}/deploy/dhparams.pem;

    root /home/{{user}}/deploy/www;

    index index.html index.htm;

    lua_code_cache on;

    set $session_secret {{jwt_secret}};
    set $session_cookie_persistent on;
    set $session_cookie_lifetime   157784760;

    location / {
        try_files $uri $uri/ =404;
    }

    location /auth {
        access_by_lua '
            local jwt = require("nginx-jwt")
            jwt.auth(nil, {
                sub="X-Kiln-Share-Id"
            })
        ';
        proxy_pass http://127.0.0.1:8080$uri;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }
}
